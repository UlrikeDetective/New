biggest_Layoffs_usa <- biggest_Layoffs %>%
filter(Country, USA)
count(biggest_Layoffs, Country = USA)
biggest_Layoffs_usa <- biggest_Layoffs %>%
filter(Country = USA)
biggest_Layoffs_usa <- biggest_Layoffs %>%
filter(Country == USA)
biggest_Layoffs_usa <- biggest_Layoffs %>%
filter(Country == "USA")
head(biggist_layoffs_usa)
biggest_Layoffs_usa
head(biggest_Layoffs_usa)
str(biggest_Layoffs_usa)
biggest_Layoffs_usa_filter <- biggest_Layoffs %>%
filter(Country == "USA")
biggest_Layoffs_usa_select <- biggest_Layoffs %>%
select(Country == "USA")
glimpse(biggest_Layoffs_usa_filter)
install.packages("jsonlite")
library(jsonlite)
library(purrr)
setwd("~/projects/Google_Data")
# Read JSON data
August_google <- fromJSON("2023_AUGUST.json")
library(ggplot2)
library(tidyr)
library(ploty)
library(plotly)
install.packages("plotly")
library(plotly)
head(August_google)
str(August_google)
colnames(August_google)
head(August_google)
install.packages("leaflet")
library(leaflet)
lat <- August_google$lat
lng <- August_google$lng
mymap <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
addMarkers(lng = lng, lat = lat, popup = "Your Location")
str(August_google)
setwd("~/projects/Trial_and_error/data")
head(Layoffs_Tracker)
library(readxl)
library(tidyverse)
library(dplyr)
Layoffs_Tracker <- read_excel("Layoffs_Tracker.xlsx")
# Summary of the Country column
country_count <- Layoffs_2023 %>%
count(Country)
head(Layoffs_Tracker)
# Summary of the Country column
country_count <- Layoffs_Tracker %>%
count(Country)
country_count
print(country_count)
# Filter for USA and count Location HQ
usa_locations_2023 <- Layoffs_Tracker %>%
filter(Country == "USA") %>%
count(`Locoation HQ`)
# Filter for USA and count Location HQ
usa_locations_2023 <- Layoffs_Tracker %>%
filter(Country == "USA") %>%
count(`Location HQ`)
usa_locations_2023
europe_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "Europe") %>%
count(`Location HQ`)
europe_locations_2023
library(knitr)
# Create a table for country_count
kable(country_count)
# Create a table for usa_locations
kable(usa_locations)
# Create a table for usa_locations
kable(usa_locations_2023)
library(ggplot2)
# Bar plot for country_count
ggplot(country_count, aes(x = Country, y = n)) +
geom_bar(stat = "identity")
# Bar plot for usa_locations
ggplot(usa_locations_2023, aes(x = `Locoation HQ`, y = n)) +
geom_bar(stat = "identity")
# Bar plot for usa_locations
ggplot(usa_locations_2023, aes(x = `Location HQ`, y = n)) +
geom_bar(stat = "identity")
country_count_desc <- country_count %>%
arrange(desc(n))
country_count_desc
top_10_countries <- head(country_count_desc, 10)
top_10_countries
# Create a table for top 10 countries
kable(top_10_countries)
# Bar plot for top 10 countries
ggplot(top_10_countries, aes(x = reorder(Country, -n), y = n)) +
geom_bar(stat = "identity") +
labs(x = "Country", y = "Count") +
coord_flip()  # For horizontal bars
# Create a color palette for the bars
my_colors <- c("#FF9999", "#FFCC99", "#FFFF99", "#CCFF99", "#99FF99", "#99FFCC", "#99FFFF", "#99CCFF", "#9999FF", "#CC99FF")
# Bar plot for top 10 countries with specified colors
ggplot(top_10_countries, aes(x = reorder(Country, -n), y = n, fill = Country)) +
geom_bar(stat = "identity") +
labs(x = "Country", y = "Count") +
scale_fill_manual(values = my_colors) +  # Apply custom colors
coord_flip()
# Filter for USA and count Location HQ
usa_locations_2023 <- Layoffs_Tracker %>% arrange(desc(n))
arrange(desc(n))
# Filter for USA and count Location HQ
usa_locations_2023 <- Layoffs_Tracker %>%
filter(Country == "USA") %>%
count(`Location HQ`) %>%
arrange(desc(n))
usa_locations_2023
europe_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "Europe") %>%
count(`Location HQ`) |>
arrange(desc(n))
europe_locations_2023
Top_10_USA_locations <- head(usa_locations_2023, 10)
top_10_countries
Top_10_USA_locations
Top_10_USA_locations <- head(usa_locations_2023, 5)
Top_10_USA_locations
Top_5_USA_locations <- head(usa_locations_2023, 5)
Top_5_USA_locations
Top_5_Europe_locations <- head(europe_locations_2023, 5)
Top_5_Europe_locations
ggplot(Top_5_USA_locations, aes(x = reorder(Country, -n), y = n, fill = Country)) +
geom_bar(stat = "identity") +
labs(x = "Country", y = "Count") +
scale_fill_manual(values = my_colors) +  # Apply custom colors
coord_flip()
labs(x = "Location HQ", y = "Count") +
ggplot(Top_5_USA_locations, aes(x = reorder(Country, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +  # Apply custom colors
coord_flip()
ggplot(Top_5_USA_locations, aes(x = reorder(Country, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip()
str(Top_5_USA_locations)
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip()
ggplot(Top_5_Europe_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip()
# Create a color palette for the bars
my_colors <- viridis_pal(option = "D")(10))
# Create a color palette for the bars
my_colors <- brewer.pal(10, "Set3")
# Create a color palette for the bars
my_colors <- c("darkgoldenrod2", "bisque1", "azure", "aquamarine2", "cornflowerblue", "cadetblue2","blue1","cyan","deepskyblue1" , "deepskyblue4")
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(panel.background = element_rect(fill = "white"))
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
theme(panel.background = element_rect(fill = "white"))
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
theme(panel.background = element_rect(fill = "black"))
ggplot(Top_5_Europe_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(panel.background = element_rect(fill = "white"),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.text.y = element_blank()   # Remove y-axis labels
))
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(
panel.background = element_rect(fill = "white"),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.text.y = element_blank()   # Remove y-axis labels
)
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
geom_text(aes(label = NULL), hjust = -0.2, size = 3) +  # Removes labels
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip()
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
geom_text(aes(label = ""), show.legend = FALSE, hjust = -0.2, size = 3) +  # Removes labels
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip()
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = NULL, y = "Count") +  # Remove x-axis label
scale_fill_manual(values = my_colors) +
coord_flip()
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
geom_text(aes(label = `Location HQ`), hjust = -0.1, size = 3) +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
theme(panel.background = element_rect(fill = "black"))
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
theme(panel.background = element_rect(fill = "black"))
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = NULL, y = "Count") +  # Set x-axis label to NULL
scale_fill_manual(values = my_colors) +
theme(panel.background = element_rect(fill = "white"),  # Set plot background to white
axis.text.x = element_blank(),  # Remove x-axis labels
axis.ticks.x = element_blank())  # Remove x-axis ticks
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
theme(panel.background = element_rect(fill = "black"))
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +  # Adjust width as needed
labs(x = NULL, y = "Count") +
scale_fill_manual(values = my_colors) +
theme(panel.background = element_rect(fill = "white"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggplot(Top_5_Europe_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(panel.background = element_rect(fill = "black"),
)
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(panel.background = element_rect(fill = "black"))
# Create a pie chart
ggplot(Top_5_USA_locations, aes(x = "", y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Location HQ") +
theme_void() +
theme(legend.position = "bottom")  # Adjust legend position if needed
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(legend.position = bottom) +
theme(panel.background = element_rect(fill = "black"))
# Create a pie chart
ggplot(Top_5_USA_locations, aes(x = "", y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Location HQ") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(legend.position = "bottom")  # Adjust legend position if needed
# Create a pie chart
ggplot(Top_5_USA_locations, aes(x = "", y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Location HQ") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")  # Adjust legend position if needed
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(legend.position = bottom) +
theme(panel.background = element_rect(fill = "black"))
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(legend.position = "bottom") +
theme(panel.background = element_rect(fill = "black"))
ggplot(Top_5_Europe_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(legend.position = "bottom") +
theme(panel.background = element_rect(fill = "black"),
)
africa_locations_2023
africa_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "Africa") %>%
count(`Location HQ`) |>
arrange(desc(n))
africa_locations_2023
Layoffs_Tracker <- read_excel("Layoffs_Tracker.xlsx")
# Summary of the Country column
country_count <- Layoffs_Tracker %>%
count(Country)
country_count
print(country_count)
country_count_desc <- country_count %>%
arrange(desc(n))
country_count_desc
top_10_countries <- head(country_count_desc, 10)
top_10_countries
# Filter for USA and count Location HQ
usa_locations_2023 <- Layoffs_Tracker %>%
filter(Country == "USA") %>%
count(`Location HQ`) %>%
arrange(desc(n))
usa_locations_2023
Top_5_USA_locations <- head(usa_locations_2023, 5)
Top_5_USA_locations
europe_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "Europe") %>%
count(`Location HQ`) |>
arrange(desc(n))
europe_locations_2023
Top_5_Europe_locations <- head(europe_locations_2023, 5)
Top_5_Europe_locations
africa_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "Africa") %>%
count(`Location HQ`) |>
arrange(desc(n))
africa_locations_2023
Top_5_Africa_locations <- head(africa_locations_2023, 5)
Top_5_Africa_locations
asia_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "Asia") %>%
count(`Location HQ`) |>
arrange(desc(n))
asia_locations_2023
Top_5_Asia_locations <- head(asia_locations_2023, 5)
Top_5_Asia_locations
australia_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "Australia") %>%
count(`Location HQ`) |>
arrange(desc(n))
australia_locations_2023
Top_5_Australia_locations <- head(australia_locations_2023, 5)
Top_5_Australia_locations
north_america_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "North America") %>%
count(`Location HQ`) |>
arrange(desc(n))
north_america_locations_2023
Top_5_North_America_locations <- head(north_america_locations_2023, 5)
Top_5_north_america_locations
Top_5_North_America_locations <- head(north_america_locations_2023, 5)
Top_5_North_America_locations
south_america_locations_2023 <- Layoffs_Tracker %>%
filter(Continent == "South America") %>%
count(`Location HQ`) |>
arrange(desc(n))
south_america_locations_2023
Top_5_South_America_locations <- head(south_america_locations_2023, 5)
Top_5_South_America_locations
north_america_countries_2023 <- Layoffs_Tracker %>%
filter(Continent == "North America") %>%
count(`Country`) |>
arrange(desc(n))
north_america_countries_2023
south_america_countries_2023 <- Layoffs_Tracker %>%
filter(Continent == "South America") %>%
count(`Country`) |>
arrange(desc(n))
south_america_countries_2023
europe_countries_2023 <- Layoffs_Tracker %>%
filter(Continent == "Europe") %>%
count(`Country`) |>
arrange(desc(n))
europe_countries_2023
Top_5_Europe_countries <- head(europe_countries_2023, 5)
Top_5_Europe_countries
africa_countries_2023 <- Layoffs_Tracker %>%
filter(Continent == "Africa") %>%
count(`Country`) |>
arrange(desc(n))
africa_countries_2023
asia_countries_2023 <- Layoffs_Tracker %>%
filter(Continent == "Asia") %>%
count(`Country`) |>
arrange(desc(n))
asia_countries_2023
Top_5_Asia_countries <- head(asia_countries_2023, 5)
Top_5_Asia_countries
australia_countries_2023 <- Layoffs_Tracker %>%
filter(Continent == "Australia") %>%
count(`Country`) |>
arrange(desc(n))
australia_countries_2023
# Bar plot for top 10 countries with specified colors
ggplot(top_10_countries, aes(x = reorder(Country, -n), y = n, fill = Country)) +
geom_bar(stat = "identity") +
labs(x = "Country", y = "Count") +
scale_fill_manual(values = my_colors) +  # Apply custom colors
coord_flip()
# Bar plot for top 10 countries with specified colors
ggplot(top_10_countries, aes(x = reorder(Country, -n), y = n, fill = Country)) +
geom_bar(stat = "identity") +
labs(x = "Country", y = "Count") +
scale_fill_manual(values = my_colors)  +
theme(legend.position = "bottom") +
theme(panel.background = element_rect(fill = "black"))
# Bar plot for usa_locations
ggplot(usa_locations_2023, aes(x = `Location HQ`, y = n)) +
geom_bar(stat = "identity")
ggplot(Top_5_USA_locations, aes(x = reorder(`Location HQ`, -n), y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity") +
labs(x = "Location HQ", y = "Count") +
scale_fill_manual(values = my_colors) +
coord_flip() +
theme(legend.position = "bottom") +
theme(panel.background = element_rect(fill = "black"))
# Create a pie chart
ggplot(Top_5_USA_locations, aes(x = "", y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Location HQ") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")  # Adjust legend position if needed
# Create a pie chart
ggplot(country_count_desc, aes(x = "", y = n, fill = `Location HQ`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Location HQ") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")
# Create a pie chart
ggplot(country_count, aes(x = "", y = n, fill = `country`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")
# Create a pie chart
ggplot(country_count, aes(x = "", y = n, fill = `Country`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")
continent_count <- Layoffs_Tracker %>%
count(Continent)
continent_count
# Create a pie chart
ggplot(continent_count, aes(x = "", y = n, fill = `Continent`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Continent") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")
# Create a pie chart
ggplot(continent_count, aes(x = "", y = n, fill = `Continent`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Continent") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")
# Create a pie chart
ggplot(continent_count, aes(x = "", y = n, fill = `Continent`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Continent") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")
# Create a pie chart
ggplot(continent_count, aes(x = "", y = n, fill = `Continent`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Continent") +
scale_fill_manual(values = my_colors) +
theme_void() +
theme(panel.background = element_rect(fill = "black")) +
theme(legend.position = "bottom")
