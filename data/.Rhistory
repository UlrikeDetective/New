main = "Top 3 SBB nach Anzahl beschlossene Anträge",
col = my_colors)
install.packages('quarto')
library(quatro)
library(quarto)
install.packages('knitr')
install.packages("knitr")
library(knitr)
quarto install tool tinytex
quarto install tool tinytex
tinytex::install_tinytex()
echo: false
#| echo: false
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
barplot(durchschnittliche_Sitzungsdauer, names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", col = my_colors)
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = list("Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", line = 3),
col = my_colors)
# Define your data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
# Set up the plot with custom margin sizes
par(mar = c(5, 5, 5, 10))  # c(bottom, left, top, right)
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer, names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", col = "skyblue")
# Define your data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
# Set up the plot with custom margin sizes
par(mar = c(5, 5,10, 10))  # c(bottom, left, top, right)
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer, names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", col = "skyblue")
# Define your data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
# Set up the plot with custom margin sizes
par(mar = c(5, 5,10, 10))  # c(bottom, left, top, right)
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer, names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Sitzungsdauer /n (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", col = "skyblue")
# Define your data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
# Set up the plot with custom margin sizes
par(mar = c(5, 5,10, 10))  # c(bottom, left, top, right)
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer, names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke", ylab = expression(bquote("Durchschnittliche Sitzungsdauer (Minuten)"~(plain("Title Line 1")*plain("Title Line 2")))),
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", col = "skyblue")
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "green", "red")  # Your color choices
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = expression(bquote("Durchschnittliche Sitzungsdauer (Minuten)"~(plain("Title Line 1")*plain("Title Line 2")))),
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors)
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "green", "red")  # Your color choices
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = expression(bquote("~(plain("Durchschnittliche Sitzungsdauer")*plain("(Minuten)")))),
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "green", "red")  # Your color choices
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = expression(bquote("Durchschnittliche Sitzungsdauer (Minuten)"~(plain("Durchschnittliche Sitzungsdauer")*plain("Minuten")))),
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors)
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "green", "red")  # Your color choices
# Create the bar plot
barplot(durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = expression(bquote(~(plain("Durchschnittliche Sitzungsdauer")*plain("Minuten")))),
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors)
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "green", "red")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = expression("Durchschnittliche Sitzungsdauer (Minuten)" ~ atop("Line 1", "Line 2")),
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors
)
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "green", "red")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = expression("Durchschnittliche Sitzungsdauer (Minuten)" ~ atop("Durchschnittliche Sitzungsdauer", "(in Minuten)")),
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors
)
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
barplot(durchschnittliche_Sitzungsdauer, names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", col = my_colors)
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
barplot(durchschnittliche_Sitzungsdauer, names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = list("Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", line = 3), col = my_colors)
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "green", "red")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 5)  # Change 'line' value as needed
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer", line = 5,
col = my_colors
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 5)  # Change 'line' value as needed
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 5)  # Change 'line' value as needed
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 15)  # Change 'line' value as needed
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 105)  # Change 'line' value as needed
durchschnittliche_Mitglieder <- c(9.9, 8.8, 8.5)
Stadtbezirke_mitglieder <- c("Mitte", "West", "Süd")
barplot(durchschnittliche_Mitglieder, names.arg = Stadtbezirke_mitglieder,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Anzahl an Mitgliedern",
main = "Top 3 Stadtbezirke mit den meisten Mitgliedern", col = my_colors)
durchschnittliche_Gaeste <- c(30.7, 16.5, 15.9)
Stadtbezirke_gast <- c("Ost", "West", "Nord")
barplot(durchschnittliche_Gaeste, names.arg = Stadtbezirke_gast,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Anzahl an Gästen",
main = "Top 3 Stadtbezirke mit der höchsten durchschnittlichen Anzahl an Gästen", col = my_colors)
durchschnittliche_Gaeste <- c(30.7, 16.5, 15.9)
Stadtbezirke_gast <- c("Ost", "West", "Nord")
barplot(durchschnittliche_Gaeste, names.arg = Stadtbezirke_gast,
xlab = "Stadtbezirke", ylab = "Durchschnittliche Anzahl an Gästen",
main = "Top 3 Stadtbezirke mit der höchsten \n durchschnittlichen Anzahl an Gästen", col = my_colors)
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer \n (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 5)  # Change 'line' value as needed
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer \n (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors,
mar = c(10, 5, 4, 2)  # Adjust the left margin (10) as needed
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 5)  # Change 'line' value as needed
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer \n (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors,
mar = c(30, 5, 4, 2)  # Adjust the left margin (10) as needed
)
# Adjust y-axis label position
title(ylab = "Durchschnittliche Sitzungsdauer (Minuten)", line = 5)  # Change 'line' value as needed
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer \n (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors,
mar = c(30, 5, 4, 2)  # Adjust the left margin (10) as needed
)
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer \n (Minuten)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors,
mar = c(30, 5, 4, 2)
)
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer in Min)",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors,
mar = c(30, 5, 4, 2)
)
# Example data
durchschnittliche_Sitzungsdauer <- c(108, 112, 112)
Stadtbezirke_dauer <- c("West", "Nord", "Nordwest")
my_colors <- c("blue", "cyan", "yellow")  # Your color choices
# Create the bar plot
barplot(
durchschnittliche_Sitzungsdauer,
names.arg = Stadtbezirke_dauer,
xlab = "Stadtbezirke",
ylab = "Durchschnittliche Sitzungsdauer in Min",
main = "Top 3 Stadtbezirke mit der kürzesten Sitzungsdauer",
col = my_colors,
mar = c(30, 5, 4, 2)
)
anzahl_Vorlagen_Antraege <- c(57, 31, 39)
Stadtbezirke_vorlagen <- c("Mitte", "Süd", "Nord")
barplot(anzahl_Vorlagen_Antraege, names.arg = Stadtbezirke_vorlagen,
xlab = "Stadtbezirke", ylab = "Anzahl behandelten Vorlagen und Anträgen",
main = "Top 3 Stadtbezirke mit der höchsten Anzahl behandelten Vorlagen und Anträgen", col = my_colors)
anzahl_Vorlagen_Antraege <- c(57, 31, 39)
Stadtbezirke_vorlagen <- c("Mitte", "Süd", "Nord")
barplot(anzahl_Vorlagen_Antraege, names.arg = Stadtbezirke_vorlagen,
xlab = "Stadtbezirke", ylab = "Anzahl behandelten Vorlagen und Anträgen",
main = "Top 3 Stadtbezirke mit der höchsten \n Anzahl behandelten Vorlagen und Anträgen", col = my_colors)
library(tidyverse)
library(knitr)
library(ggpubr)
install.packages("ggpubr")
library(tidyverse)
library(knitr)
library(ggpubr)
install.packages("ggpubr")
library(tidyverse)
library(knitr)
library(ggpubr)
install.packages("ggpubr")
df = tibble(
direction_effect = factor(c("Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"No change","No change","No change","No change","No change",
"No change", "Increase", "Increase", "Increase", "Increase",
"Increase", "Increase", "Increase", "Increase"),
levels = c("Decrease", "No change", "Increase")) ,
stat_sig = factor(c("Yes","No","No","No","Yes","Yes","No","Yes","N/A","N/A","N/A",
"N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","N/A","No","N/A",
"No","No","N/A","N/A","N/A","No","Yes","Yes","No","N/A","N/A","No"),
levels = c("N/A", "No", "Yes")),
quality = c(3,3,3,3,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,3,2,2,1,2,1,1),
n_interventions = c(1,1,1,2,3,3,4,1,1,1,1,1,1,1,1,1,1,2,2,1,4,1,1,1,1,1,1,4,2,2,1,1,2,1),
position = c(1,3,4,2,5,6,8,7,11,12,13,14,15,16,17,18,19,9,10,20,10,12,11,9,8,13,13,20,19,
18,16,17,14,15))
library(tidyverse)
library(knitr)
library(ggpubr)
library(tibble)
library(tibble)
# Creating the dataframe
df <- tibble(
direction_effect = factor(
c("Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"Decrease", "Decrease", "Decrease", "Decrease", "Decrease",
"No change", "No change", "No change", "No change", "No change",
"No change", "Increase", "Increase", "Increase", "Increase",
"Increase", "Increase", "Increase", "Increase"),
levels = c("Decrease", "No change", "Increase")
),
stat_sig = factor(
c("Yes", "No", "No", "No", "Yes", "Yes", "No", "Yes", "N/A", "N/A", "N/A",
"N/A", "N/A", "N/A", "N/A", "N/A", "N/A", "N/A", "N/A", "N/A", "No", "N/A",
"No", "No", "N/A", "N/A", "N/A", "No", "Yes", "Yes", "No", "N/A", "N/A", "No"),
levels = c("N/A", "No", "Yes")
),
quality = c(3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 2, 2, 1, 2, 1, 1),
n_interventions = c(1, 1, 1, 2, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 4, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 2, 1),
position = c(
1, 3, 4, 2, 5, 6, 8, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 9, 10, 20, 10, 12, 11, 9, 8, 13, 13, 20, 19,
18, 16, 17, 14, 15
)
)
# Viewing the created dataframe
print(df)
source("~/.active-rstudio-document", echo=TRUE)
ggplot(df, aes(y=quality, x=position)) +
geom_bar(stat="identity") +
facet_grid(cols=vars(direction_effect))
cbPalette <- c("#A9C5D0","#FFB7B0","#ADA7A7")
ggplot(df, aes(y=quality, x=position, fill=stat_sig)) +
geom_bar(stat="identity") +
facet_grid(cols=vars(direction_effect)) +
scale_fill_manual(values=cbPalette, breaks=c("Yes","No","N/A")) +
guides(fill=guide_legend("Significant")) +
geom_text(size=3, aes(label=n_interventions), position=position_dodge(width=0.9), vjust=-0.4)
ggplot(df, aes(y=quality, x=position, fill=stat_sig)) +
geom_bar(stat="identity") +
facet_grid(cols=vars(direction_effect)) +
scale_fill_manual(values=cbPalette, breaks=c("Yes","No","N/A")) +
guides(fill = guide_legend("Significant")) +
geom_text(size=3, aes(label=n_interventions), position=position_dodge(width=0.9), vjust=-0.4) +
theme(strip.placement="outside") +
scale_y_continuous("Quality", limits=c(0,3.5)) +
theme_minimal(base_size=12) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.background=element_blank())
data_harvest <- readRDS(url("https://github.com/christina-s-xiao/harvest_plot/raw/revise/harvest_plot_data.rds"))
print(data_harvest)
data_harvest = data_harvest %>%
group_by(cs_category, direction_effect, outcome_mode) %>% # group by column variable (and row variables if you're using them)
arrange(desc(quality), desc(stat_sig), desc(n_interventions), .by_group = TRUE) # sort by quality measures in order of precedence
c = count(data_harvest, direction_effect, outcome_mode,cs_category, .drop = TRUE) # count the number of studies in each group
n = max(c$n) # number of studies in the group with the most studies
v = c(0, rep(1:n, each=2, length.out=n-1)) * c(-1, 1) + floor(n/2) # creates a position vector starting in the middle and working out for "No change" column
c = left_join(c,
tibble(
direction_effect = c("Decrease", "No change" ,"Increase"),
order = list(seq_len(n),
v[seq_len(n)],
seq(n,1,-1)))
) # joins the correct position vector to each group
l = lapply(seq_len(nrow(c)), function(x) c$order[[x]][seq_len(c$n[x])]) # collect the position vector for each group
data_harvest$position = unlist(l) # add the new position variable to the dataset
drive <- data_harvest[data_harvest$outcome_mode == 'Driving', ]
public_transport <- data_harvest[data_harvest$outcome_mode == 'Public transport', ]
print(drive)
print(public_transport)
drive_a <- ggplot(drive, aes(fill=stat_sig, y=quality, x=position, label=study_id)) +
geom_bar(position="dodge", stat="identity") + # Adding bars to the plot
scale_fill_manual(values=cbPalette, na.translate=FALSE, breaks=c("Yes","No","N/A")) + # Adding colours to the bars
geom_text(size=3,aes(label=n_interventions), position=position_dodge(width=0.9), vjust=-0.4) # Adding annotated number of interventions above each bar
drive_b <- drive_a +
facet_grid(cs_category~direction_effect,
switch="y", space='free_x') +
theme_minimal(base_size=14)
drive_c <- drive_b +
theme(strip.placement="outside") +
scale_y_continuous("Quality", limits=c(0,3.5)) +
theme(plot.title=element_text(size=14, face="bold"),
legend.title=element_text(size=12, face="bold"),
legend.text=element_text(size=10)) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.background=element_blank())
drive_final <- drive_c + guides(fill = guide_legend("Significant", nrow=3)) +
theme(legend.position="right") + labs(title="Driving")
drive_final
pt_final<- ggplot(public_transport, aes(fill=stat_sig, y=quality, x=position, label = study_id)) +
geom_bar(position="dodge", stat="identity") + scale_fill_manual(values=cbPalette, na.translate=FALSE,
breaks=c("Yes","No","N/A")) +
geom_text(size=3, aes(label=n_interventions), position=position_dodge(width=0.9), vjust=-0.4) +
facet_grid(cs_category~direction_effect,
switch = "y", space='free_x') +
theme_minimal(base_size=12) +
theme(strip.placement = "outside") +
scale_y_continuous("Quality", limits=c(0,3.5)) +
theme(plot.title = element_text(size=14, face = "bold"),
legend.title=element_text(size=12, face = "bold"),
legend.text=element_text(size=10)) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
guides(fill = guide_legend("Significant", nrow=3)) +
theme(legend.position="right") + labs(title="Public transport")
ggarrange(drive_final, pt_final, hjust=-0.5,
ncol=1, nrow=2, common.legend=TRUE, legend='right')
str(biggest_Layoffs)
library(readxl)
library(tidyverse)
# Replace 'file.xlsx' with the path to your Excel file
biggest_Layoffs <- read_excel("Biggest_Layoffs.xlsx")
setwd(/Users/ulrike_imac_air/projects/Trial_and_error/data
setwd("/Users/ulrike_imac_air/projects/Trial_and_error/data")
# Replace 'file.xlsx' with the path to your Excel file
biggest_Layoffs <- read_excel("Biggest_Layoffs.xlsx")
Layoffs_Tracker <- read_excel("Layoffs_Tracker.xlsx")
View(biggest_Layoffs)
setwd("~/projects/Trial_and_error/data")
