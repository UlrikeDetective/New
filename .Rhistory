ggtitle("Reported Layoffs 2023 - Most reported layoffs in Africa \n by Location HQ \n  (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
plot_Af02 <- ggplot(africa_countries_2023_na, aes(x = "", y = n, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
ggtitle("Reported Layoffs \n 2023 by Country \n  in Africa") +
scale_fill_manual(values = my_palette_custom_yellow_blue) +
custom_theme_white()
plot_Af01 + plot_Af02 + plot_layout(ncol = 2)
plot_Af01 <- ggplot(Top_5_Africa_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Africa \n by Location HQ \n  (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
plot_Af02 <- ggplot(africa_countries_2023_na, aes(x = "", y = n, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
ggtitle("Reported Layoffs \n 2023 by Country \n  in Africa") +
scale_fill_manual(values = my_palette_custom_blues) +
custom_theme_white()
plot_Af01 + plot_Af02 + plot_layout(ncol = 2)
plot_Af01 <- ggplot(Top_5_Africa_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Africa \n by Location HQ \n  (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
plot_Af02 <- ggplot(africa_countries_2023_na, aes(x = "", y = n, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
ggtitle("Reported Layoffs \n 2023 by Country \n  in Africa") +
scale_fill_manual(values = my_palette_custom_blues01) +
custom_theme_white()
plot_Af01 + plot_Af02 + plot_layout(ncol = 2)
plot_Af01 <- ggplot(Top_5_Africa_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Africa \n by Location HQ \n  (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
plot_Af02 <- ggplot(africa_countries_2023_na, aes(x = "", y = n, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
ggtitle("Reported Layoffs \n 2023 by Country \n  in Africa") +
scale_fill_manual(values = my_palette_custom_orange_blue) +
custom_theme_white()
plot_Af01 + plot_Af02 + plot_layout(ncol = 2)
plot_Af01 <- ggplot(Top_5_Africa_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Africa \n by Location HQ \n  (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
plot_Af02 <- ggplot(africa_countries_2023_na, aes(x = "", y = n, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
ggtitle("Reported Layoffs \n 2023 by Country \n  in Africa") +
scale_fill_manual(values = my_colors) +
custom_theme_white()
plot_Af01 + plot_Af02 + plot_layout(ncol = 2)
australia_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
count(`Location_HQ`) |>
arrange(desc(n))
australia_locations_2023_na
unique_australia_locations_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations for Australia in the dataset"))
print(unique_australia_locations_na$Message)
cat("\n")
unique_HQ_list_australia_na <- unique(australia_locations_2023_na$`Location_HQ`)
unique_HQ_list_australia_na <- sort(unique_HQ_list_australia_na)
print(unique_HQ_list_australia_na)
cat("\n")
entries_australia_count_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
nrow()
print(paste("The dataset Australia has", entries_australia_count_na, "entries."))
cat("\n")
unique_australia_companies_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies for Australia in the dataset"))
print(unique_australia_companies_na$Message)
cat("\n")
Top_5_Australia_locations_na <- head(australia_locations_2023_na, 5)
Top_5_Australia_locations
australia_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
count(`Location_HQ`) |>
arrange(desc(n))
australia_locations_2023_na
unique_australia_locations_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations for Australia in the dataset"))
print(unique_australia_locations_na$Message)
cat("\n")
unique_HQ_list_australia_na <- unique(australia_locations_2023_na$`Location_HQ`)
unique_HQ_list_australia_na <- sort(unique_HQ_list_australia_na)
print(unique_HQ_list_australia_na)
cat("\n")
entries_australia_count_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
nrow()
print(paste("The dataset Australia has", entries_australia_count_na, "entries."))
cat("\n")
unique_australia_companies_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies for Australia in the dataset"))
print(unique_australia_companies_na$Message)
cat("\n")
Top_5_Australia_locations_na <- head(australia_locations_2023_na, 5)
Top_5_Australia_locations_na
australia_countries_2023_na <- Layoffs_Tracker_without_na %>%
filter(Continent == "Australia") %>%
count(`Country`) |>
arrange(desc(n))
australia_countries_2023_na
plot_Au01 <- ggplot(Top_5_Australia_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Australia \n by Location HQ \n  (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
plot_Au02 <- ggplot(australia_countries_2023_na, aes(x = "", y = n, fill = Country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Country") +
ggtitle("Reported Layoffs \n 2023 by Country \n  in Australia") +
scale_fill_manual(values = my_colors) +
custom_theme_white()
plot_Au01 + plot_Au02 + plot_layout(ncol = 2)
usa_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_usa_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations for the USA in the dataset"))
print(unique_usa_locations_na$Message)
cat("\n")
unique_HQ_list_usa_na <- unique(usa_locations_2023_na$`Location_HQ`)
unique_HQ_list_usa_na <- sort(unique_HQ_list_usa_na)
print(unique_HQ_list_usa_na)
cat("\n")
entries_usa_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
nrow()
print(paste("The dataset USA has", entries_usa_count_na, "entries."))
cat("\n")
unique_usa_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in the USA in the dataset"))
print(unique_usa_companies_na$Message)
cat("\n")
Top_5_USA_locations_na <- head(usa_locations_2023_na, 5)
Top_5_USA_locations_na
usa_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_usa_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations for the USA in the dataset"))
print(unique_usa_locations_na$Message)
cat("\n")
unique_HQ_list_usa_na <- unique(usa_locations_2023_na$`Location_HQ`)
unique_HQ_list_usa_na <- sort(unique_HQ_list_usa_na)
print(unique_HQ_list_usa_na)
cat("\n")
entries_usa_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
nrow()
print(paste("The dataset USA has", entries_usa_count_na, "entries."))
cat("\n")
unique_usa_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "USA") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in the USA in the dataset"))
print(unique_usa_companies_na$Message)
cat("\n")
Top_5_USA_locations_na <- head(usa_locations_2023_na, 5)
Top_5_USA_locations_na
Top_10_USA_locations_na <- head(usa_locations_2023_na, 10)
Top_10_USA_locations_na
ggplot(Top_10_USA_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in the USA \n by Location HQ \n  (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
ggplot(Top_10_USA_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in the USA \n by Location HQ (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
larger_palette <- viridis_pal(option = "viridis")(n = 97)
ggplot(usa_locations_2023, aes(x = "", y = n, fill = `Location_HQ`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(fill = "Location_HQ") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in the USA \n by Location HQ (counted)") +
scale_fill_manual(values = larger_palette) +
theme_void() +
theme(panel.background = element_rect(fill = "azure2")) +
theme(legend.position = "bottom")
india_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_india_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations in India in the dataset"))
print(unique_india_locations_na$Message)
cat("\n")
unique_HQ_list_india_na <- unique(india_locations_2023_na$`Location_HQ`)
unique_HQ_list_india_na <- sort(unique_HQ_list_india_na)
print(unique_HQ_list_india_na)
cat("\n")
entries_india_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
nrow()
print(paste("The dataset India has", entries_india_count_na, "entries."))
cat("\n")
unique_india_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in India in the dataset"))
print(unique_india_companies_na$Message)
cat("\n")
Top_5_india_locations_na <- head(india_locations_2023_na, 5)
Top_5_india_locations
india_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_india_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations in India in the dataset"))
print(unique_india_locations_na$Message)
cat("\n")
unique_HQ_list_india_na <- unique(india_locations_2023_na$`Location_HQ`)
unique_HQ_list_india_na <- sort(unique_HQ_list_india_na)
print(unique_HQ_list_india_na)
cat("\n")
entries_india_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
nrow()
print(paste("The dataset India has", entries_india_count_na, "entries."))
cat("\n")
unique_india_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "India") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in India in the dataset"))
print(unique_india_companies_na$Message)
cat("\n")
Top_5_india_locations_na <- head(india_locations_2023_na, 10)
Top_5_india_locations_na
ggplot(Top_5_india_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in India \n by Location HQ (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
canada_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_canada_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations in Canada in the dataset"))
print(unique_canada_locations_na$Message)
cat("\n")
unique_HQ_list_canada_na <- unique(canada_locations_202_na3$`Location_HQ`)
canada_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_canada_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations in Canada in the dataset"))
print(unique_canada_locations_na$Message)
cat("\n")
unique_HQ_list_canada_na <- unique(canada_locations_2023_na$`Location_HQ`)
unique_HQ_list_canada_na <- sort(unique_HQ_list_canada_na)
print(unique_HQ_list_canada_na)
cat("\n")
entries_canada_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
nrow()
print(paste("The dataset Canada has", entries_canada_count_na, "entries."))
cat("\n")
unique_canada_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in Canada in the dataset"))
print(unique_canada_companies_na$Message)
cat("\n")
Top_5_canada_locations_na <- head(canada_locations_2023_na, 5)
Top_5_canada_locations_na
canada_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_canada_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations in Canada in the dataset"))
print(unique_canada_locations_na$Message)
cat("\n")
unique_HQ_list_canada_na <- unique(canada_locations_2023_na$`Location_HQ`)
unique_HQ_list_canada_na <- sort(unique_HQ_list_canada_na)
print(unique_HQ_list_canada_na)
cat("\n")
entries_canada_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
nrow()
print(paste("The dataset Canada has", entries_canada_count_na, "entries."))
cat("\n")
unique_canada_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Canada") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in Canada in the dataset"))
print(unique_canada_companies_na$Message)
cat("\n")
Top_5_canada_locations_na <- head(canada_locations_2023_na, 9)
Top_5_canada_locations_na
ggplot(Top_5_canada_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Canada \n by Location HQ (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
uk_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "United Kingdom") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_uk_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "United Kingdom") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations for the United Kingdom in the dataset"))
print(unique_uk_locations_na$Message)
cat("\n")
unique_HQ_list_uk_na <- unique(uk_locations_2023_na$`Location_HQ`)
unique_HQ_list_uk_na <- sort(unique_HQ_list_uk_na)
print(unique_HQ_list_uk_na)
cat("\n")
entries_uk_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "United Kingdom") %>%
nrow()
print(paste("The dataset United Kingdom has", entries_uk_count_na, "entries."))
cat("\n")
unique_uk_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "United Kingdom") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in the United Kingdom in the dataset"))
print(unique_uk_companies_na$Message)
cat("\n")
Top_5_UK_locations_na <- head(uk_locations_2023_na, 5)
Top_5_UK_locations_na
ggplot(Top_5_uk_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in the United Kingdom \n by Location HQ (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
ggplot(Top_5_UK_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in the United Kingdom \n by Location HQ (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
germany_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_germany_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations in Germany in the dataset"))
print(unique_germany_locations_na$Message)
cat("\n")
unique_HQ_list_germany_na <- unique(germany_locations_2023_na$`Location_HQ`)
unique_HQ_list_germany_na <- sort(unique_HQ_list_germany_na)
print(unique_HQ_list_germany_na)
cat("\n")
entries_germany_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
nrow()
print(paste("The dataset Germany has", entries_germany_count_na, "entries."))
cat("\n")
unique_germany_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in Germany in the dataset"))
print(unique_germany_companies_na$Message)
cat("\n")
Top_5_Germany_locations_na <- head(germany_locations_2023_na, 5)
Top_5_Germany_locations_na
germany_locations_2023_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
count(`Location_HQ`) %>%
arrange(desc(n))
# usa_locations_2023
unique_germany_locations_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
distinct(`Location_HQ`) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique HQ locations in Germany in the dataset"))
print(unique_germany_locations_na$Message)
cat("\n")
unique_HQ_list_germany_na <- unique(germany_locations_2023_na$`Location_HQ`)
unique_HQ_list_germany_na <- sort(unique_HQ_list_germany_na)
print(unique_HQ_list_germany_na)
cat("\n")
entries_germany_count_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
nrow()
print(paste("The dataset Germany has", entries_germany_count_na, "entries."))
cat("\n")
unique_germany_companies_na <- Layoffs_Tracker_without_na %>%
filter(Country == "Germany") %>%
distinct(Company) %>%
summarise(Count = n()) %>%
mutate(Message = paste("There are", Count, "unique companies in Germany in the dataset"))
print(unique_germany_companies_na$Message)
cat("\n")
Top_5_Germany_locations_na <- head(germany_locations_2023_na, 7)
Top_5_Germany_locations_na
ggplot(Top_5_germany_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Germany \n by Location HQ (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
ggplot(Top_5_Germany_locations_na, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
geom_bar(stat = "identity") +
labs(x = "Location_HQ", y = "Count") +
ggtitle("Reported Layoffs 2023 - Most reported layoffs in Germany \n by Location HQ (counted)") +
scale_fill_manual(values = my_palette_Blue_Yellow) +
coord_flip() +
custom_theme_white_nolegend()
my_palette_custom_all <- c("#34f5ff", "#33eff9", "#32e9f3", "#32e3ec", "#31dde6", "#30d7e0", "#2fd1da", "#2fcbd4", "#2ec6cd", "#2dc0c7", "#2cbac1", "#2cb4bb", "#2baeb5", "#2aa8ae", "#29a2a8", "#299ca2", "#28969c", "#279095", "#268a8f", "#268489", "#257e83", "#24787d", "#237376", "#236d70", "#22676a", "#216164", "#205b5e", "#205557", "#1f4f51", "#1e494b", "#fcff4f", "#f5f955", "#edf35b", "#e6ed61", "#dee767", "#d7e16d", "#cfdb73", "#c8d579", "#c0d080", "#b9ca86", "#b1c48c", "#aabe92", "#a2b898", "#9bb29e", "#93aca4", "#8ca6aa", "#84a0b0", "#7d9ab6", "#7594bc", "#6e8ec2", "#6688c8", "#5f82ce", "#577dd5", "#5077db", "#4871e1", "#416be7", "#3965ed", "#325ff3", "#2a59f9", "#2353ff","#1531ff", "#1631fa", "#1630f6", "#1730f1", "#1730ed", "#182fe8", "#182fe3", "#192fdf", "#192fda", "#1a2ed5", "#1a2ed1", "#1b2ecc", "#1b2dc8", "#1c2dc3", "#1c2dbe", "#1d2cba", "#1d2cb5", "#1e2cb0", "#1e2bac", "#1f2ba7", "#1f2ba3", "#202a9e", "#202a99", "#212a95", "#212a90", "#22298b", "#222987", "#232982", "#23287e", "#242879", "#ff6d2a", "#f86a31", "#f16639", "#ea6340", "#e35f47", "#dc5c4f", "#d55856", "#ce555d", "#c85165", "#c14e6c", "#ba4b73", "#b3477b", "#ac4482", "#a54089", "#9e3d91", "#973998", "#9036a0", "#8932a7", "#822fae", "#7b2bb6", "#7428bd", "#6d25c4", "#6721cc", "#601ed3", "#591ada", "#5217e2", "#4b13e9", "#4410f0", "#3d0cf8", "#3609ff", "#fbffae", "#f3f9ab", "#ecf2a7", "#e4eca4", "#dde6a0", "#d5e09d", "#cdd99a", "#c6d396", "#becd93", "#b6c78f", "#afc08c", "#a7ba88", "#a0b485", "#98ad82", "#90a77e", "#89a17b", "#819b77", "#799474", "#728e71", "#6a886d", "#63816a", "#5b7b66", "#537563", "#4c6f5f", "#44685c", "#3c6259", "#355c55", "#2d5652", "#264f4e", "#1e494b")
my_palette_TealGrn <- paletteer::paletteer_c("grDevices::TealGrn", 30)
my_palette_Blue_Yellow <- paletteer::paletteer_c("grDevices::Blue-Yellow", 30)
my_palette_custom_all <- c("#34f5ff", "#33eff9", "#32e9f3", "#32e3ec", "#31dde6", "#30d7e0", "#2fd1da", "#2fcbd4", "#2ec6cd", "#2dc0c7", "#2cbac1", "#2cb4bb", "#2baeb5", "#2aa8ae", "#29a2a8", "#299ca2", "#28969c", "#279095", "#268a8f", "#268489", "#257e83", "#24787d", "#237376", "#236d70", "#22676a", "#216164", "#205b5e", "#205557", "#1f4f51", "#1e494b", "#fcff4f", "#f5f955", "#edf35b", "#e6ed61", "#dee767", "#d7e16d", "#cfdb73", "#c8d579", "#c0d080", "#b9ca86", "#b1c48c", "#aabe92", "#a2b898", "#9bb29e", "#93aca4", "#8ca6aa", "#84a0b0", "#7d9ab6", "#7594bc", "#6e8ec2", "#6688c8", "#5f82ce", "#577dd5", "#5077db", "#4871e1", "#416be7", "#3965ed", "#325ff3", "#2a59f9", "#2353ff","#1531ff", "#1631fa", "#1630f6", "#1730f1", "#1730ed", "#182fe8", "#182fe3", "#192fdf", "#192fda", "#1a2ed5", "#1a2ed1", "#1b2ecc", "#1b2dc8", "#1c2dc3", "#1c2dbe", "#1d2cba", "#1d2cb5", "#1e2cb0", "#1e2bac", "#1f2ba7", "#1f2ba3", "#202a9e", "#202a99", "#212a95", "#212a90", "#22298b", "#222987", "#232982", "#23287e", "#242879", "#ff6d2a", "#f86a31", "#f16639", "#ea6340", "#e35f47", "#dc5c4f", "#d55856", "#ce555d", "#c85165", "#c14e6c", "#ba4b73", "#b3477b", "#ac4482", "#a54089", "#9e3d91", "#973998", "#9036a0", "#8932a7", "#822fae", "#7b2bb6", "#7428bd", "#6d25c4", "#6721cc", "#601ed3", "#591ada", "#5217e2", "#4b13e9", "#4410f0", "#3d0cf8", "#3609ff", "#fbffae", "#f3f9ab", "#ecf2a7", "#e4eca4", "#dde6a0", "#d5e09d", "#cdd99a", "#c6d396", "#becd93", "#b6c78f", "#afc08c", "#a7ba88", "#a0b485", "#98ad82", "#90a77e", "#89a17b", "#819b77", "#799474", "#728e71", "#6a886d", "#63816a", "#5b7b66", "#537563", "#4c6f5f", "#44685c", "#3c6259", "#355c55", "#2d5652", "#264f4e", "#1e494b")
my_palette_TealGrn <- paletteer::paletteer_c("grDevices::TealGrn", 30)
my_palette_Blue_Yellow <- paletteer::paletteer_c("grDevices::Blue-Yellow", 30)
my_colors <- c("darkblue", "darkslategray4", "darkslategray2","yellow", "azure3", "aquamarine2", "cornflowerblue", "lightyellow", "cadetblue2","blue1","cyan","deepskyblue1","lightblue","darkgoldenrod", "deepskyblue", "azure1", "aquamarine", "darkgoldenrod1", "cadetblue", "blue2","cyan1", "deepskyblue2", "darkslategray1", "darkgoldenrod2", "azure2", "aquamarine3", "cadetblue3", "blue3", "cyan2", "deepskyblue3", "darkslategray3", "azure", "cyan3", "blue4", "deepskyblue4", "cadetblue4", "lightyellow")
my_colors5 <- c("yellow", "#deff25", "#44c6b7", "#601ed3", "#190fe4")
my_colors3 <- c("yellow", "#190fe4", "#44c6b7")
