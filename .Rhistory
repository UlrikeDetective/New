ggVennDiagram(x,
label = none)
# install.packages("ggplot2")
library(ggplot2)
ggplot(df_pie2, aes(x = "", y = value, fill = group)) +
geom_col(color = "black") +
geom_text(aes(label = value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme(legend.position = "none")
# install.packages("ggVennDiagram")
library(ggVennDiagram)
# List of items
x <- list(A = 1:5, B = 2:7, C = 5:10)
# Venn diagram without labels
ggVennDiagram(x,
label = "none")
# install.packages("ggVennDiagram")
library(ggVennDiagram)
# List of items
x <- list(A = 1:5, B = 2:7, C = 5:10)
# Venn diagram without labels
ggVennDiagram(x,
label = "none",
legend = "none")
# install.packages("ggVennDiagram")
library(ggVennDiagram)
# List of items
x <- list(A = 1:5, B = 2:7, C = 5:10)
# Venn diagram without labels
ggVennDiagram(x,
label = "none")
# install.packages("devtools")
# devtools::install_github("gaospecial/ggVennDiagram")
library(ggVennDiagram)
# List of items
x <- list(A = 1:5, B = 2:7, C = 5:10)
# Labels transparency
ggVennDiagram(x,
label_alpha = 0)
# install.packages("ggVennDiagram")
library(ggVennDiagram)
# install.packages("ggplot2")
library(ggplot2)
# List of items
x <- list(A = 1:5, B = 2:7, C = 5:10)
# Venn diagram with custom legend
ggVennDiagram(x) +
guides(fill = guide_legend(title = "Title")) +
theme(legend.title = element_text(color = "red"),
legend.position = "bottom")
# install.packages("ggVennDiagram")
library(ggVennDiagram)
# install.packages("ggplot2")
library(ggplot2)
# List of items
x <- list(A = 1:5, B = 2:7, C = 5:10)
# Venn diagram without legend
ggVennDiagram(x, color = 1, lwd = 0.7) +
scale_fill_gradient(low = "#F4FAFE", high = "#4981BF") +
theme(legend.position = "none")
install.packages("waffle", repos = "https://cinc.rud.is")
# install.packages("waffle", repos = "https://cinc.rud.is")
library(waffle)
install.packages("waffle", repos = "https://cinc.rud.is")
# install.packages("waffle", repos = "https://cinc.rud.is")
library(waffle)
# install.packages("waffle", repos = "https://cinc.rud.is")
# library(waffle)
# Vector
x <- c(30, 25, 20, 5)
x
# Waffle chart
# waffle(x, rows = 8)
install.packages("waffle", repos = "https://cinc.rud.is")
library(waffle)
devtools::install_git("https://git.rud.is/hrbrmstr/waffle.git")
install.packages("waffle", repos = "https://cinc.rud.is")
library(waffle)
install.packages("waffle", repos = "https://cinc.rud.is")
library(dplyr)
library(waffle)
# Data
dat <- apply(Titanic, c(1, 4), sum)
dat
spineplot(dat)
spineplot(t(dat))
spineplot(dat, col = c("#07798D", "#7BCB9F"))
spineplot(dat, col = c("#07798D", "#7BCB9F"),
border = c("#07798D", "#7BCB9F"))
spineplot(dat, off = 0)
spineplot(dat, off = 0,
col = c("#07798D", "#7BCB9F"),
border = c("#07798D", "#7BCB9F")))
spineplot(dat, off = 0,
col = c("#07798D", "#7BCB9F"),
border = c("#07798D", "#7BCB9F"))
spineplot(dat, off = 0,
col = c("#07798D", "#7BCB9F"),
border = c("white", "black"))
spineplot(dat, off = 0,
col = c("lightgreen", "red"),
border = c("white", "black"))
spineplot(dat, off = 0,
col = c("lightgreen", "red"),
border = c("white", "white"))
# Data
set.seed(1)
age <- factor(sample(c("Child", "Adult", "Retired"),
size = 50, replace = TRUE),
levels = c("Child", "Adult", "Retired"))
hours <- sample(1:4, size = 50, replace = TRUE)
city <- sample(c("A", "B", "C"),
size = 50, replace = TRUE)
df <- data.frame(x = age, y = hours, group = city)
df
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, fill = group)) +
geom_bar()
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = group)) +
geom_bar(stat = "identity")
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = group)) +
geom_bar(stat = "identity") +
scale_fill_brewer()
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = group)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#DADAEB", "#9E9AC8", "#6A51A3"))
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = group)) +
geom_bar(stat = "identity", color = "black") +
scale_fill_manual(values = c("#DADAEB", "#9E9AC8", "#6A51A3"))
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = group)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(title = "Title"))
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = group)) +
geom_bar(stat = "identity") +
scale_fill_discrete(labels = c("G1", "G2", "G3"))
# install.packages("ggplot2")
library(ggplot2)
ggplot(df, aes(x = x, y = y, fill = group)) +
geom_bar(stat = "identity") +
theme(legend.position = "none") +
scale_fill_manual(values = c("#DADAEB", "#9E9AC8", "#6A51A3"))
# Data
set.seed(1)
x <- sample(1:4, size = 50, replace = TRUE)
g <- sample(c("Group 1", "Group 2", "Group 3"),
size = 50, replace = TRUE)
# Create a table from your data
tabl <- table(x, g)
tabl
barplot(tabl,
main = "Stacked bar chart",
sub = "Subtitle",
xlab = "X-lab",
ylab = "Y-lab",
axes = TRUE)
barplot(tabl,
names.arg = c("G1", "G2", "G3"))
barplot(tabl,
horiz = TRUE)
barplot(tabl,
names.arg = c("G1", "G2", "G3"),
col = c("#993404", "#FB6A4A",
"#FED976", "#FFFFCC"))
barplot(tabl,
names.arg = c("G1", "G2", "G3"),
col = c("#993404", "#FB6A4A",
"#FED976", "#FFFFCC"),
border = "brown"))
barplot(tabl,
names.arg = c("G1", "G2", "G3"),
col = c("#993404", "#FB6A4A",
"#FED976", "#FFFFCC"),
border = "brown")
# Stacked bar plot without border
barplot(tabl, col = c("#993404", "#FB6A4A",
"#FED976", "#FFFFCC"),
border = NA)
# Stacked bar plot with legend
barplot(tabl, col = c("#993404", "#FB6A4A",
"#FED976", "#FFFFCC"),
legend.text = rownames(tabl),
args.legend = list(x = "topleft"))
# Increase the right margin
par(mar = c(5.1, 4.1, 4.1, 4))
# Stacked bar chart with legend
barplot(tabl,
col = c("#993404", "#FB6A4A",
"#FED976", "#FFFFCC"),
legend.text = rownames(tabl),
args.legend = list(x = "topright",
inset = c(-0.2, 0)))
install.packages("dendextend")
install.packages("circlize")
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram facing inside
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5,
facing = "inside")
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram facing inside
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.7,
facing = "inside")
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram facing inside
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.3,
facing = "inside")
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram facing inside
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.3,
facing = "inside",
width = 800,  # Adjust width
height = 800)  # Adjust height
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram facing inside
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.3,
facing = "inside",
width = 1200,  # Adjust width
height = 1200)  # Adjust height
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Circular dendrogram without labels
circlize_dendrogram(hc,
dend_track_height = 0.8,
labels = FALSE)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors
hc <- hc %>%
color_branches(k = 3)
# hc <- color_branches(hc, k = 4)
# Radial plot
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors
hc <- hc %>%
color_branches(k = 3)
# hc <- color_branches(hc, k = 4)
# Radial plot
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5,
width = 1500,  # Adjust width
height = 1200)  # Adjust height)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors
hc <- hc %>%
color_branches(k = 3)
# hc <- color_branches(hc, k = 4)
# Radial plot
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5,
width = 1500,  # Adjust width
height = 1200)  # Adjust height)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors
hc <- hc %>%
color_branches(k = 3)
# hc <- color_branches(hc, k = 4)
# Radial plot
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5,
width = 1200,  # Increase width
height = 1200,  # Adjust height
circular = TRUE,  # Ensure circular layout
rotation = 90)  # Rotate dendrogram for better fit
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors
hc <- hc %>%
color_branches(k = 3) %>%
color_labels(k = 3)
# Fan tree plot with colored labels
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors and line customization
hc <- hc %>%
color_branches(k = 3) %>%
set("branches_lwd", 2) %>%  # Line width
set("branches_lty", 2) %>%  # Line type
color_labels(k = 3)
# Line styling of the dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors and line customization
hc <- hc %>%
color_branches(k = 3) %>%
set("branches_lwd", 2) %>%  # Line width
set("branches_lty", 2) %>%  # Line type
color_labels(k = 3)
# Line styling of the dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 1.5)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d))
# Colors and line customization
hc <- hc %>%
color_branches(k = 3) %>%
set("branches_lwd", 2) %>%  # Line width
set("branches_lty", 2) %>%  # Line type
color_labels(k = 3)
# Line styling of the dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 10.5)
df <- USArrests[1:20, ]
df
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
d <- dist(USArrests)[1:20, ]
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
# Subset the first 20 rows from the USArrests dataset
subset_data <- USArrests[1:20, ]
# Calculate the distance matrix
d2 <- dist(subset_data)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d2))
# Circular dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5)
# install.packages("dendextend")
# install.packages("circlize")
library(dendextend)
library(circlize)
# Distance matrix
# Subset the first 20 rows from the USArrests dataset
subset_data <- USArrests[1:10, ]
# Calculate the distance matrix
d2 <- dist(subset_data)
# Hierarchical clustering dendrogram
hc <- as.dendrogram(hclust(d2))
# Circular dendrogram
circlize_dendrogram(hc,
labels_track_height = NA,
dend_track_height = 0.5)
# Distance matrix
d <- dist(df)
# Hierarchical clustering
hc <- hclust(d)
# Dendrogram
plot(hc)
# Distance matrix
d <- dist(df)
# Hierarchical clustering
hc <- hclust(d)
# Dendrogram
plot(as.dendrogram(hc))
# The previous line is similar to:
# plot(hc, hang = -1)
# Distance matrix
d <- dist(df)
# Hierarchical clustering
hc <- hclust(d, method = "ward.D")
# Dendrogram
plot(as.dendrogram(hc), main = "ward.D")
# Distance matrix
d <- dist(df)
# Hierarchical clustering
hc <- hclust(d, method = "ward.D2")
# Dendrogram
plot(as.dendrogram(hc), main = "ward.D2")
# Distance matrix
d <- dist(df)
# Hierarchical clustering
hc <- hclust(d, method = "single")
# Dendrogram
plot(as.dendrogram(hc), main = "single")
