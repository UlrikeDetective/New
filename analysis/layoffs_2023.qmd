---
title: "Tech_layoffs_2023"
format: pdf
editor: visual
---

# Reported layoffs in Tech Companies in 2023

Data is from https://layoffs.fyi/

Web scraping on Dec. 25th 2023

Printed table to a pdf file than created with Adobe Acrobat Reader a xlsx file.

Data cleaning - removed from location column non-USA.

Added two columns: company size before layoff and company size after layoffs.

Data cleaning layoffs2023_data: modified companies names, add two new columns: country and continent

Observations: There is a lot off missing data for the columns laid off and in Percent.

**Libraries:**

```{r, echo = FALSE}

library(readxl)
library(tidyverse)
library(dplyr)
library(knitr)
library(ggplot2)
library(skimr)
library(viridis)
```

**Dataset:**

```{r, echo = FALSE}
Layoffs_Tracker <- read_excel("/Users/ulrike_imac_air/projects/Trial_and_error/data/Layoffs_Tracker.xlsx")
```

**First look at the data:**

```{r, echo = FALSE}
# head(Layoffs_Tracker)
# str(Layoffs_Tracker)
# colnames(Layoffs_Tracker)
# glimpse(Layoffs_Tracker)
```

**Styles:**

```{r, echo = FALSE}

my_colors <- c( "blue4", "deepskyblue4", "cadetblue4", "lightyellow","darkblue", "darkslategray4", "darkslategray2","yellow", "azure3", "aquamarine2", "cornflowerblue", "lightyellow", "cadetblue2","blue1","cyan","deepskyblue1","lightblue","darkgoldenrod", "deepskyblue", "azure1", "aquamarine", "darkgoldenrod1", "cadetblue", "blue2","cyan1", "deepskyblue2", "darkslategray1", "darkgoldenrod2", "azure2", "aquamarine3", "cadetblue3", "blue3", "cyan2", "deepskyblue3", "darkslategray3", "azure", "cyan3")
```

**Describing the Data:**

```{r, echo = FALSE}

skim(Layoffs_Tracker)

unique_countries <- Layoffs_Tracker %>%
  distinct(Country) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique countries in the dataset"))

print(unique_countries$Message)

```

**List of the countries in the dataset with companies with reported layoffs in 2023**

```{r, echo = FALSE}
unique_country_list <- unique(Layoffs_Tracker$Country)
unique_country_list <- sort(unique_country_list)

# View the list of unique countries
print(unique_country_list)
```

**Entries in Dataset:**

```{r, echo = FALSE}
entries_count <- nrow(Layoffs_Tracker)
print(paste("The dataset has", entries_count, "entries."))

```

**Companies in Dataset:**

```{r, echo = FALSE}
unique_companies <- Layoffs_Tracker %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies in the dataset"))

print(unique_companies$Message)
```

**Reported layoffs counted - going by country and continent:**

```{r, echo = FALSE}
continent_count <- Layoffs_Tracker %>% 
  count(Continent)

continent_count_desc <- continent_count |> 
  arrange(desc(n))
continent_count_desc

country_count <- Layoffs_Tracker %>% 
  count(Country)

country_count_desc <- country_count %>% 
  arrange(desc(n))

country_count_desc

top_10_countries <- head(country_count_desc, 10)
top_10_countries
```

**Barplot: Continent count**

```{r, echo = FALSE}
ggplot(continent_count_desc, aes(x = reorder(Continent, -n), y = n, fill = Continent)) +
  geom_bar(stat = "identity") +
  labs(x = "Continent", y = "Count") +
  scale_fill_manual(values = my_colors)  +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs \n by continent (counted)") +
  theme(legend.position = "bottom") +
  theme(panel.background = element_rect(fill = "black"),
        legend.position = "bottom",
        plot.title = element_text(face = "bold", size = 14))

```

**Barplot: TOP 10 Countries**

```{r, echo = FALSE}
# Bar plot for top 10 countries with specified colors
ggplot(top_10_countries, aes(x = reorder(Country, -n), y = n, fill = Country)) +
  geom_bar(stat = "identity") +
  labs(x = "Country", y = "Count") +
  scale_fill_manual(values = my_colors)  +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs \n by country (counted)") +
  theme(legend.position = "bottom") +
  theme(panel.background = element_rect(fill = "black"),
        legend.position = "bottom",
        plot.title = element_text(face = "bold", size = 14))
```

**Reported layoffs counted - going by location Headquarters, continent and country:**

**North America:**

```{r, echo = FALSE}
north_america_locations_2023 <- Layoffs_Tracker %>%
  filter(Continent == "North America") %>%
  count(`Location_HQ`) %>%
  arrange(desc(n))

unique_north_american_locations <- Layoffs_Tracker %>%
  filter(Continent == "North America") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for North America in the dataset"))

print(unique_north_american_locations$Message)

cat("\n")

unique_HQ_list_north_america <- unique(north_america_locations_2023$`Location_HQ`)
unique_HQ_list_north_america <- sort(unique_HQ_list_north_america)

print(unique_HQ_list_north_america)

cat("\n")

entries_north_america_count <- Layoffs_Tracker %>%
  filter(Continent == "North America") %>%
  nrow()
  
print(paste("The dataset North America has", entries_north_america_count, "entries."))

cat("\n")

unique_north_america_companies <- Layoffs_Tracker %>%
  filter(Continent == "North America") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies for North America in the dataset"))

print(unique_north_america_companies$Message)

cat("\n")

Top_5_North_America_locations <- head(north_america_locations_2023, 5)
Top_5_North_America_locations

cat("\n")

north_america_countries_2023 <- Layoffs_Tracker %>%
  filter(Continent == "North America") %>%
  count(`Country`) |> 
  arrange(desc(n))
north_america_countries_2023
```

**Charts North America:**

```{r, echo = FALSE}

ggplot(Top_5_North_America_locations, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
  geom_bar(stat = "identity") +
  labs(x = "Location_HQ", y = "Count") +
  scale_fill_manual(values = my_colors)  +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in North America \n by Location HQ (counted)") +
  theme(legend.position = "bottom") +
  theme(panel.background = element_rect(fill = "black"),
        legend.position = "bottom",
        plot.title = element_text(face = "bold", size = 14))

```

```{r, echo = FALSE}
larger_palette <- viridis_pal(option = "viridis")(n = 97)

# Plot without a legend

plot(ggplot(north_america_locations_2023, aes(x = "", y = n, fill = Location_HQ)) +
       geom_bar(stat = "identity", width = 1) +
       coord_flip() +
       labs(fill = "Location_HQ") +
       scale_fill_manual(values = larger_palette) +
       ggtitle("Stacked Bar Chart - Reported Layoffs 2023 by Location HQ \n in North America") +
       theme(panel.background = element_rect(fill = "azure2"),
             legend.position = "none",  # Remove the legend
             plot.title = element_text(face = "bold", size = 16)))
```

**Reported layoffs counted - going by location Headquarters, continent and country:**

**South America:**

```{r, echo = FALSE}
south_america_locations_2023 <- Layoffs_Tracker %>%
  filter(Continent == "South America") %>%
  count(`Location_HQ`) |> 
  arrange(desc(n))
south_america_locations_2023

unique_south_american_locations <- Layoffs_Tracker %>%
  filter(Continent == "South America") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for South America in the dataset"))

print(unique_south_american_locations$Message)

cat("\n")

unique_HQ_list_south_america <- unique(south_america_locations_2023$`Location_HQ`)
unique_HQ_list_south_america <- sort(unique_HQ_list_south_america)

print(unique_HQ_list_south_america)

cat("\n")

entries_south_america_count <- Layoffs_Tracker %>%
  filter(Continent == "South America") %>%
  nrow()
  
print(paste("The dataset South America has", entries_south_america_count, "entries."))

cat("\n")

unique_south_america_companies <- Layoffs_Tracker %>%
  filter(Continent == "South America") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies for South America in the dataset"))

print(unique_south_america_companies$Message)

cat("\n")

Top_5_South_America_locations <- head(south_america_locations_2023, 5)
Top_5_South_America_locations

south_america_countries_2023 <- Layoffs_Tracker %>%
  filter(Continent == "South America") %>%
  count(`Country`) |> 
  arrange(desc(n))
south_america_countries_2023
```

**Reported layoffs counted - going by location Headquarters, continent and country:**

```{r, echo = FALSE}

ggplot(Top_5_South_America_locations, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
  geom_bar(stat = "identity") +
  labs(x = "Location_HQ", y = "Count") +
  scale_fill_manual(values = my_colors)  +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in South America \n by Location HQ (counted) - TOP 5") +
  theme(legend.position = "bottom") +
  theme(panel.background = element_rect(fill = "black"),
        legend.position = "bottom",
        plot.title = element_text(face = "bold", size = 14))



plot(ggplot(south_america_countries_2023, aes(x = "", y = n, fill = Country)) +
       geom_bar(stat = "identity", width = 1) +
       coord_polar("y", start = 0) +
       scale_fill_manual(values = my_colors) +
       labs(fill = "Country") +
       ggtitle("Pie chart - Reported Layoffs 2023 by Country \n in South America") +
       theme_void() +
       theme(panel.background = element_rect(fill = "azure2"),
             legend.position = "right",
             plot.title = element_text(face = "bold", size = 16)))

```

**Europe (with Israel and Turkey):**

```{r, echo = FALSE}
europe_locations_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Europe") %>%
  count(`Location_HQ`) |> 
  arrange(desc(n))
europe_locations_2023

unique_europe_locations <- Layoffs_Tracker %>%
  filter(Continent == "Europe") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for Europe in the dataset"))

print(unique_europe_locations$Message)

cat("\n")

unique_HQ_list_europe <- unique(europe_locations_2023$`Location_HQ`)
unique_HQ_list_europe <- sort(unique_HQ_list_europe)

print(unique_HQ_list_europe)

cat("\n")

entries_europe_count <- Layoffs_Tracker %>%
  filter(Continent == "Europe") %>%
  nrow()
  
print(paste("The dataset Europe has", entries_europe_count, "entries."))

cat("\n")

unique_europe_companies <- Layoffs_Tracker %>%
  filter(Continent == "Europe") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies for Europe in the dataset"))

print(unique_europe_companies$Message)

cat("\n")

Top_5_Europe_locations <- head(europe_locations_2023, 5)
Top_5_Europe_locations

europe_countries_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Europe") %>%
  count(`Country`) |> 
  arrange(desc(n))
europe_countries_2023

Top_5_Europe_countries <- head(europe_countries_2023, 5)
Top_5_Europe_countries
```

**Reported layoffs counted - going by location Headquarters, continent and country:**

```{r, echo = FALSE}
ggplot(Top_5_Europe_locations, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
  geom_bar(stat = "identity") +
  labs(x = "Location_HQ", y = "Count") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in Europe \n by Location HQ (counted) - TOP 5") +
  scale_fill_manual(values = my_colors) +
  coord_flip() +
  theme(legend.position = "bottom") +
  theme(panel.background = element_rect(fill = "black"),
  )
  
plot(ggplot(europe_countries_2023, aes(x = "", y = n, fill = Country)) +
       geom_bar(stat = "identity", width = 1) +
       coord_polar("y", start = 0) +
       scale_fill_manual(values = my_colors) +
       labs(fill = "Country") +
       ggtitle("Pie chart - Reported Layoffs 2023 by Country \n in Europe") +
       theme_void() +
       theme(panel.background = element_rect(fill = "azure2"),
             legend.position = "right",
             plot.title = element_text(face = "bold", size = 16)))  
```

**Reported layoffs counted - going by location Headquarters, continent and country:**

**Asia:**

```{r, echo = FALSE}
asia_locations_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Asia") %>%
  count(`Location_HQ`) |> 
  arrange(desc(n))
asia_locations_2023

unique_asia_locations <- Layoffs_Tracker %>%
  filter(Continent == "Asia") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for Asia in the dataset"))

print(unique_asia_locations$Message)

cat("\n")

unique_HQ_list_asia <- unique(asia_locations_2023$`Location_HQ`)
unique_HQ_list_asia <- sort(unique_HQ_list_asia)

print(unique_HQ_list_asia)

cat("\n")

entries_asia_count <- Layoffs_Tracker %>%
  filter(Continent == "Asia") %>%
  nrow()
  
print(paste("The dataset Asia has", entries_asia_count, "entries."))

cat("\n")

unique_asia_companies <- Layoffs_Tracker %>%
  filter(Continent == "Asia") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies for Asia in the dataset"))

print(unique_asia_companies$Message)

cat("\n")

Top_5_Asia_locations <- head(asia_locations_2023, 5)
Top_5_Asia_locations

asia_countries_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Asia") %>%
  count(`Country`) |> 
  arrange(desc(n))
asia_countries_2023

Top_5_Asia_countries <- head(asia_countries_2023, 5)
Top_5_Asia_countries
```

**Reported layoffs counted - going by location Headquarters, continent and country:**

```{r, echo = FALSE}
ggplot(Top_5_Asia_locations, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
  geom_bar(stat = "identity") +
  labs(x = "Location_HQ", y = "Count") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in Asia \n by Location HQ (counted) - TOP 5") +
  scale_fill_manual(values = my_colors) +
  coord_flip() +
  theme(legend.position = "bottom") +
  theme(panel.background = element_rect(fill = "black"),
  )
  
plot(ggplot(asia_countries_2023, aes(x = "", y = n, fill = Country)) +
       geom_bar(stat = "identity", width = 1) +
       coord_polar("y", start = 0) +
       scale_fill_manual(values = my_colors) +
       labs(fill = "Country") +
       ggtitle("Pie chart - Reported Layoffs 2023 by Country \n in Asia") +
       theme_void() +
       theme(panel.background = element_rect(fill = "azure2"),
             legend.position = "right",
             plot.title = element_text(face = "bold", size = 16)))  

```

**Africa:**

```{r, echo = FALSE}
africa_locations_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Africa") %>%
  count(`Location_HQ`) |> 
  arrange(desc(n))
africa_locations_2023

unique_africa_locations <- Layoffs_Tracker %>%
  filter(Continent == "Africa") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for Africa in the dataset"))

print(unique_africa_locations$Message)

cat("\n")

unique_HQ_list_africa <- unique(africa_locations_2023$`Location_HQ`)
unique_HQ_list_africa <- sort(unique_HQ_list_africa)

print(unique_HQ_list_africa)

cat("\n")

entries_africa_count <- Layoffs_Tracker %>%
  filter(Continent == "Africa") %>%
  nrow()
  
print(paste("The dataset Africa has", entries_africa_count, "entries."))

cat("\n")

unique_africa_companies <- Layoffs_Tracker %>%
  filter(Continent == "Africa") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies for Africa in the dataset"))

print(unique_africa_companies$Message)

cat("\n")

Top_5_Africa_locations <- head(africa_locations_2023, 5)
Top_5_Africa_locations

africa_countries_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Africa") %>%
  count(`Country`) |> 
  arrange(desc(n))
africa_countries_2023
```

**Reported layoffs counted - going by location Headquarters, continent and country:**

```{r, echo = FALSE}
ggplot(africa_locations_2023, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
  geom_bar(stat = "identity") +
  labs(x = "Location_HQ", y = "Count") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in Africa \n by Location HQ (counted)") +
  scale_fill_manual(values = my_colors) +
  coord_flip() +
  theme(legend.position = "right") +
  theme(panel.background = element_rect(fill = "black"),
  )
  
plot(ggplot(africa_countries_2023, aes(x = "", y = n, fill = Country)) +
       geom_bar(stat = "identity", width = 1) +
       coord_polar("y", start = 0) +
       scale_fill_manual(values = my_colors) +
       labs(fill = "Country") +
       ggtitle("Pie chart - Reported Layoffs 2023 by Country \n in Africa") +
       theme_void() +
       theme(panel.background = element_rect(fill = "azure2"),
             legend.position = "right",
             plot.title = element_text(face = "bold", size = 16)))  

```

**Australia:**

```{r, echo = FALSE}
australia_locations_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Australia") %>%
  count(`Location_HQ`) |> 
  arrange(desc(n))
australia_locations_2023

unique_australia_locations <- Layoffs_Tracker %>%
  filter(Continent == "Australia") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for Australia in the dataset"))

print(unique_australia_locations$Message)

cat("\n")

unique_HQ_list_australia <- unique(australia_locations_2023$`Location_HQ`)
unique_HQ_list_australia <- sort(unique_HQ_list_australia)

print(unique_HQ_list_australia)

cat("\n")

entries_australia_count <- Layoffs_Tracker %>%
  filter(Continent == "Australia") %>%
  nrow()
  
print(paste("The dataset Australia has", entries_australia_count, "entries."))

cat("\n")

unique_australia_companies <- Layoffs_Tracker %>%
  filter(Continent == "Australia") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies for Australia in the dataset"))

print(unique_australia_companies$Message)

cat("\n")

Top_5_Australia_locations <- head(australia_locations_2023, 5)
Top_5_Australia_locations

australia_countries_2023 <- Layoffs_Tracker %>%
  filter(Continent == "Australia") %>%
  count(`Country`) |> 
  arrange(desc(n))
australia_countries_2023
```

**Charts:**

```{r, echo = FALSE}
ggplot(australia_locations_2023, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
  geom_bar(stat = "identity") +
  labs(x = "Location_HQ", y = "Count") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in Austalia \n by Location HQ (counted)") +
  scale_fill_manual(values = my_colors) +
  coord_flip() +
  theme(legend.position = "bottom") +
  theme(panel.background = element_rect(fill = "black"),
  )
  
plot(ggplot(australia_countries_2023, aes(x = "", y = n, fill = Country)) +
       geom_bar(stat = "identity", width = 1) +
       coord_polar("y", start = 0) +
       scale_fill_manual(values = my_colors) +
       labs(fill = "Country") +
       ggtitle("Pie chart - Reported Layoffs 2023 by Country \n in Australia") +
       theme_void() +
       theme(panel.background = element_rect(fill = "azure2"),
             legend.position = "right",
             plot.title = element_text(face = "bold", size = 16)))  


```

**Reported layoffs counted - going by location Headquarters**

**USA:**

```{r, echo = FALSE}
usa_locations_2023 <- Layoffs_Tracker %>%
  filter(Country == "USA") %>%
  count(`Location_HQ`) %>%
  arrange(desc(n))

# usa_locations_2023

unique_usa_locations <- Layoffs_Tracker %>%
  filter(Country == "USA") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for the USA in the dataset"))

print(unique_usa_locations$Message)

cat("\n")

unique_HQ_list_usa <- unique(usa_locations_2023$`Location_HQ`)
unique_HQ_list_usa <- sort(unique_HQ_list_usa)

print(unique_HQ_list_usa)

cat("\n")

entries_usa_count <- Layoffs_Tracker %>%
  filter(Country == "USA") %>%
  nrow()
  
print(paste("The dataset USA has", entries_usa_count, "entries."))

cat("\n")

unique_usa_companies <- Layoffs_Tracker %>%
  filter(Country == "USA") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies in the USA in the dataset"))

print(unique_usa_companies$Message)

cat("\n")

Top_5_USA_locations <- head(usa_locations_2023, 5)
Top_5_USA_locations
```

**Barplot:**

```{r, echo = FALSE}
ggplot(Top_5_USA_locations, aes(x = reorder(Location_HQ, -n), y = n, fill = Location_HQ)) +
  geom_bar(stat = "identity") +
  labs(x = "Location_HQ", y = "Count") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in Austalia \n by Location HQ (counted)") +
  scale_fill_manual(values = my_colors) +
  coord_flip() +
  theme(legend.position = "right") +
  theme(panel.background = element_rect(fill = "black"),
  )
```

Piechart:

```{r, echo = FALSE}

larger_palette <- viridis_pal(option = "viridis")(n = 97)

ggplot(usa_locations_2023, aes(x = "", y = n, fill = `Location_HQ`)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(fill = "Location_HQ") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in the USA \n by Location HQ (counted)") +
  scale_fill_manual(values = larger_palette) +
  theme_void() +
  theme(panel.background = element_rect(fill = "azure2")) +
  theme(legend.position = "bottom")
```

**India:**

```{r, echo = FALSE}
india_locations_2023 <- Layoffs_Tracker %>%
  filter(Country == "India") %>%
  count(`Location_HQ`) %>%
  arrange(desc(n))

# usa_locations_2023

unique_india_locations <- Layoffs_Tracker %>%
  filter(Country == "India") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations in India in the dataset"))

print(unique_india_locations$Message)

cat("\n")

unique_HQ_list_india <- unique(india_locations_2023$`Location_HQ`)
unique_HQ_list_india <- sort(unique_HQ_list_india)

print(unique_HQ_list_india)

cat("\n")

entries_india_count <- Layoffs_Tracker %>%
  filter(Country == "India") %>%
  nrow()
  
print(paste("The dataset India has", entries_india_count, "entries."))

cat("\n")

unique_india_companies <- Layoffs_Tracker %>%
  filter(Country == "India") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies in India in the dataset"))

print(unique_india_companies$Message)

cat("\n")

Top_5_india_locations <- head(india_locations_2023, 5)
Top_5_india_locations

```

```{r, echo = FALSE}

ggplot(india_locations_2023, aes(x = "", y = n, fill = `Location_HQ`)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(fill = "Location_HQ") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in India \n by Location HQ (counted)") +
  scale_fill_manual(values = my_colors) +
  theme_void() +
  theme(panel.background = element_rect(fill = "azure2")) +
  theme(legend.position = "right")

```

**Canada:**

```{r, echo = FALSE}
canada_locations_2023 <- Layoffs_Tracker %>%
  filter(Country == "Canada") %>%
  count(`Location_HQ`) %>%
  arrange(desc(n))

# usa_locations_2023

unique_canada_locations <- Layoffs_Tracker %>%
  filter(Country == "Canada") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations in Canada in the dataset"))

print(unique_canada_locations$Message)

cat("\n")

unique_HQ_list_canada <- unique(canada_locations_2023$`Location_HQ`)
unique_HQ_list_canada <- sort(unique_HQ_list_canada)

print(unique_HQ_list_canada)

cat("\n")

entries_canada_count <- Layoffs_Tracker %>%
  filter(Country == "Canada") %>%
  nrow()
  
print(paste("The dataset Canada has", entries_canada_count, "entries."))

cat("\n")

unique_canada_companies <- Layoffs_Tracker %>%
  filter(Country == "Canada") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies in Canada in the dataset"))

print(unique_canada_companies$Message)

cat("\n")

Top_5_canada_locations <- head(canada_locations_2023, 5)
Top_5_canada_locations
```

```{r, echo = FALSE}

ggplot(canada_locations_2023, aes(x = "", y = n, fill = `Location_HQ`)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(fill = "Location_HQ") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in Canada \n by Location HQ (counted)") +
  scale_fill_manual(values = my_colors) +
  theme_void() +
  theme(panel.background = element_rect(fill = "azure2")) +
  theme(legend.position = "right")

```

**The United Kingdom:**

```{r, echo = FALSE}
uk_locations_2023 <- Layoffs_Tracker %>%
  filter(Country == "United Kingdom") %>%
  count(`Location_HQ`) %>%
  arrange(desc(n))

# usa_locations_2023

unique_uk_locations <- Layoffs_Tracker %>%
  filter(Country == "United Kingdom") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations for the United Kingdom in the dataset"))

print(unique_uk_locations$Message)

cat("\n")

unique_HQ_list_uk <- unique(uk_locations_2023$`Location_HQ`)
unique_HQ_list_uk <- sort(unique_HQ_list_uk)

print(unique_HQ_list_uk)

cat("\n")

entries_uk_count <- Layoffs_Tracker %>%
  filter(Country == "United Kingdom") %>%
  nrow()
  
print(paste("The dataset United Kingdom has", entries_uk_count, "entries."))

cat("\n")

unique_uk_companies <- Layoffs_Tracker %>%
  filter(Country == "United Kingdom") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies in the United Kingdom in the dataset"))

print(unique_uk_companies$Message)

cat("\n")

Top_5_UK_locations <- head(uk_locations_2023, 5)
Top_5_UK_locations

```

```{r, echo = FALSE}

ggplot(uk_locations_2023, aes(x = "", y = n, fill = `Location_HQ`)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(fill = "Location_HQ") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in the United Kingdom \n by Location HQ (counted)") +
  scale_fill_manual(values = my_colors) +
  theme_void() +
  theme(panel.background = element_rect(fill = "azure4")) +
  theme(legend.position = "right")
```

**Germany:**

```{r, echo = FALSE}
germany_locations_2023 <- Layoffs_Tracker %>%
  filter(Country == "Germany") %>%
  count(`Location_HQ`) %>%
  arrange(desc(n))

# usa_locations_2023

unique_germany_locations <- Layoffs_Tracker %>%
  filter(Country == "Germany") %>%
  distinct(`Location_HQ`) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique HQ locations in Germany in the dataset"))

print(unique_germany_locations$Message)

cat("\n")

unique_HQ_list_germany <- unique(germany_locations_2023$`Location_HQ`)
unique_HQ_list_germany <- sort(unique_HQ_list_germany)

print(unique_HQ_list_germany)

cat("\n")

entries_germany_count <- Layoffs_Tracker %>%
  filter(Country == "Germany") %>%
  nrow()
  
print(paste("The dataset Germany has", entries_germany_count, "entries."))

cat("\n")

unique_germany_companies <- Layoffs_Tracker %>%
  filter(Country == "Germany") %>%
  distinct(Company) %>%
  summarise(Count = n()) %>%
  mutate(Message = paste("There are", Count, "unique companies in Germany in the dataset"))

print(unique_germany_companies$Message)

cat("\n")

Top_5_Germany_locations <- head(germany_locations_2023, 5)
Top_5_Germany_locations
```

```{r, echo = FALSE}

ggplot(germany_locations_2023, aes(x = "", y = n, fill = `Location_HQ`)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start = 0) +
  labs(fill = "Location_HQ") +
  ggtitle("Reported Layoffs 2023 - Most reported layoffs in Germany \n by Location HQ (counted)") +
  scale_fill_manual(values = my_colors) +
  theme_void() +
  theme(panel.background = element_rect(fill = "azure4")) +
  theme(legend.position = "right")

```

Removing rows with missing values from Dataset

```{r, echo = FALSE}

Layoffs_Tracker_without_na <- na.omit(Layoffs_Tracker)
skim(Layoffs_Tracker_without_na)


mean(Layoffs_Tracker_without_na$Company_Size_before_Layoffs)
median(Layoffs_Tracker_without_na$Company_Size_before_Layoffs)

mean(Layoffs_Tracker_without_na$Company_Size_after_layoffs)
median(Layoffs_Tracker_without_na$Company_Size_after_layoffs)

#Example countries
country_count_na <- Layoffs_Tracker_without_na %>% 
  count(Country)

country_count_desc_na <- country_count_na %>% 
  arrange(desc(n))

country_count_desc_na

top_10_countries_na <- head(country_count_desc_na, 10)
top_10_countries_na
#Example USA

usa_locations_2023_without_na <- Layoffs_Tracker_without_na %>%
  filter(Country == "USA") %>%
  count(`Location_HQ`) %>%
  arrange(desc(n))
print(usa_locations_2023_without_na)
```
